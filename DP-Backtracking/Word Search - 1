#include <iostream>
#include <vector>
#include <string>

using namespace std;

bool dfs(int i, int j, int n,int m ,vector<vector<char>> &board,string &word,int k) {
    if (k == word.size()) return true; 
    else if (i < 0 || i == n || j < 0 || j == m  || board[i][j] == '#' || board[i][j] != word[k]) return false;
    else {
        char temp = board[i][j];
        board[i][j] = '#';
        bool op1 = dfs(i + 1, j, n, m, board, word, k + 1);
        bool op2 = dfs(i, j + 1, n, m, board, word, k + 1);
        bool op3 = dfs(i - 1, j, n, m, board, word, k + 1);
        bool op4 = dfs(i, j - 1, n, m, board, word, k + 1);
        board[i][j] = temp;
        return op1 || op2 || op3 || op4;
    }
}

bool present(vector<vector<char>> &board, string &word,int n,int m){
    for(int i=0;i<n;i++){
        for(int j=0; j< m;j++){
            if(board[i][j] == word[0])
            if(dfs(i,j,n,m,board,word,0)) return true;
        }
    }
    return false;
}
