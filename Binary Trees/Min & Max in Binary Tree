Problem statement
For a given a Binary Tree of type integer, find and return the minimum and the maximum data values.

Return the output as an object of Pair class, which is already created.

Note:
All the node data will be unique and hence there will always exist a minimum and maximum node data.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
2 <= N <= 10^5
Where N is the total number of nodes in the binary tree.

Time Limit: 1 sec
Sample Input 1:
8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1
Sample Output 1:
1 14
Sample Input 2:
10 20 60 -1 -1 3 50 -1 -1 -1 -1 
Sample Output 2:
3 60

//code
#include <iostream>
#include <utility>
#include <climits>
using namespace std;


pair<int, int> getMinAndMax(BinaryTreeNode<int> *root) {
    if (root == NULL) {
        return {INT_MAX, INT_MIN};
    }

    pair<int, int> leftMinMax = getMinAndMax(root->left);
    pair<int, int> rightMinMax = getMinAndMax(root->right);

    int minVal = min(root->data, min(leftMinMax.first, rightMinMax.first));
    int maxVal = max(root->data, max(leftMinMax.second, rightMinMax.second));

    return {minVal, maxVal};
}
