Problem statement
Given a binary search tree and an integer.Find the floor value of a key in a binary search tree .

(If k lies in BST then is floor equal to k,else floor is equal to previous greater value) Note: k would never be less than the minimum element of tree.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
4
8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1
Sample Output 1:
2
Sample Input 2:
7
8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1
Sample Output 2:
7

//code

int Floor(BinaryTreeNode<int>* node, int input) {
  int floorValue = INT_MIN; 

  while (node) {
    if (node->data == input) {
      return input;
    } else if (input < node->data) {
      node = node->left;
    } else {
      floorValue = node->data;
      node = node->right;
    }
  }
  return floorValue;
}
