Problem statement
Given a BST and an integer K, you need to find the Kth smallest element present in the BST. Return INT_MIN if that is not present in the BST.

Detailed explanation ( Input/output format, Notes, Images )
Sample Input :
8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1
3
Sample Output :
6


//CODE
#include <iostream>
#include <limits>
#include <functional> // Required for std::function
using namespace std;

int findNode(BinaryTreeNode<int>* root, int k) {
    int count = 0;
    int result = std::numeric_limits<int>::min();

    std::function<void(BinaryTreeNode<int>*)> inOrder = [&](BinaryTreeNode<int>* node) {
        if (!node || count >= k) {
            return;
        }
        inOrder(node->left);
        count++;
        if (count == k) {
            result = node->data;
            return;
        }
        inOrder(node->right);
    };

    inOrder(root);
    return result;
}
