Problem statement
Given a singly linked list of integers, sort it using 'Bubble Sort.'

Note :
No need to print the list, it has already been taken care. Only return the new head to the list.
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
0 <= M <= 10^3
Where M is the size of the singly linked list.

Time Limit: 1sec
Sample Input 1 :
10 9 8 7 6 5 4 3 -1
Sample Output 1 :
 3 4 5 6 7 8 9 10 
 Sample Input 2 :
10 -5 9 90 5 67 1 89 -1
Sample Output 2 :
-5 1 5 9 10 67 89 90 

//code
/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/

Node *bubbleSort(Node *head) {
    if (head == NULL || head->next == NULL)
        return head;

    bool swapped;
    Node *temp;

    do {
        swapped = false; 
        Node *prev = NULL; 
        Node *current = head; 
        Node *nextNode = head->next; 

        while (nextNode != NULL) {
            if (current->data > nextNode->data) {
                if (prev == NULL) {
                    head = nextNode;
                } else {
                    prev->next = nextNode;
                }

                current->next = nextNode->next;
                nextNode->next = current;
                temp = current;
                current = nextNode;
                nextNode = temp;
                swapped = true; 
            }

            prev = current;
            current = nextNode;
            nextNode = nextNode->next;
        }
    } while (swapped); 

    return head;
}
